<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ExceptionMessageFormat" xml:space="preserve">
    <value>{0}\n\t{1}</value>
  </data>
  <data name="MASTER_BRANCH" xml:space="preserve">
    <value>master</value>
  </data>
  <data name="PROGRAM_NAME" xml:space="preserve">
    <value>github-release-poster</value>
  </data>
  <data name="VersionString" xml:space="preserve">
    <value>{0} version {1}</value>
  </data>
  <assembly alias="mscorlib" name="mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="EXIT_SUCCESS" type="System.Int32, mscorlib">
    <value>0</value>
  </data>
  <data name="FAILED_TO_PARSE_COMMAND_LINE" type="System.Int32, mscorlib">
    <value>-101</value>
  </data>
  <data name="BODY_SWITCH" xml:space="preserve">
    <value>--body</value>
  </data>
  <data name="IS_DRAFT_SWITCH" xml:space="preserve">
    <value>--is-draft</value>
  </data>
  <data name="IS_PRE_RELEASE_SWITCH" xml:space="preserve">
    <value>--is-pre-release</value>
  </data>
  <data name="NAME_SWITCH" xml:space="preserve">
    <value>--name</value>
  </data>
  <data name="RELEASE_ASSET_DIR_SWITCH" xml:space="preserve">
    <value>--release-asset-dir</value>
  </data>
  <data name="TAG_NAME_SWITCH" xml:space="preserve">
    <value>--tag-name</value>
  </data>
  <data name="TARGET_BRANCH_SWITCH" xml:space="preserve">
    <value>--target-branch</value>
  </data>
  <data name="USER_ACCESS_TOKEN_SWITCH" xml:space="preserve">
    <value>--user-access-token</value>
  </data>
  <data name="SwitchRequired" xml:space="preserve">
    <value>The switch '{0}' is required.</value>
  </data>
  <data name="ReleaseAssetDirNotFound" xml:space="preserve">
    <value>ERROR: The release asset directory '{0}' could not be located.  Please check whether the directory exists.</value>
  </data>
  <data name="ReleaseAssetsComeFromFolder" xml:space="preserve">
    <value>Release assets come from folder '{0}'.</value>
  </data>
  <data name="LocatedReleaseAssetDirSuccessfully" xml:space="preserve">
    <value>The release asset folder '{0}' has been located.</value>
  </data>
  <data name="UsingTagName" xml:space="preserve">
    <value>Using release tag '{0}'.</value>
  </data>
  <data name="UsingTargetBranch" xml:space="preserve">
    <value>Using target branch '{0}'.</value>
  </data>
  <data name="UsingUserAccessToken" xml:space="preserve">
    <value>Using user access token '{0}'.</value>
  </data>
  <data name="DefaultTargetBranchIsMaster" xml:space="preserve">
    <value>Default target branch is 'master'.</value>
  </data>
  <data name="BODY_SWITCH_USAGE" xml:space="preserve">
    <value>--body: Text body for the release (optional).</value>
  </data>
  <data name="RELEASE_ASSET_DIR_SWITCH_USAGE" xml:space="preserve">
    <value>--release-asset-dir: Path to directory containing the assets for this release.</value>
  </data>
  <data name="NAME_SWITCH_USAGE" xml:space="preserve">
    <value>--name: String containing the name of this release.  Surround with quotes if it contains spaces.</value>
  </data>
  <data name="TAG_NAME_SWITCH_USAGE" xml:space="preserve">
    <value>--tag-name: GitHub tag to associate this release with.</value>
  </data>
  <data name="TARGET_BRANCH_SWITCH_USAGE" xml:space="preserve">
    <value>--target-branch: GitHub branch to target this release from.</value>
  </data>
  <data name="USER_ACCESS_TOKEN_SWITCH_USAGE" xml:space="preserve">
    <value>--user-access-token: String specifying the user access token to use with GitHub API.</value>
  </data>
  <data name="FAILED_TO_PROCESS_COMMAND_LINE" type="System.Int32, mscorlib">
    <value>-102</value>
  </data>
  <data name="IS_DRAFT_SWITCH_USAGE" xml:space="preserve">
    <value>--is-draft: Specify this switch to mark this release as a draft.  Leave this switch off to not do so.</value>
  </data>
  <data name="IS_PRE_RELEASE_SWITCH_USAGE" xml:space="preserve">
    <value>--is-pre-release: Specify this switch to mark this release as pre-release; leave it off to not do so.</value>
  </data>
  <data name="UsingReleaseName" xml:space="preserve">
    <value>Release name is '{0}'</value>
  </data>
  <data name="UsingReleaseBody" xml:space="preserve">
    <value>Release body is:
{0}</value>
  </data>
  <data name="REPO_NAME_SWITCH_USAGE" xml:space="preserve">
    <value>--repo-name &lt;name&gt;: Name of the GitHub repository to which the release should be posted.</value>
  </data>
  <data name="REPO_OWNER_SWITCH_USAGE" xml:space="preserve">
    <value>--repo-owner: GitHub username of the owner of the repository to which the release should be posted.</value>
  </data>
  <data name="REPO_NAME_SWITCH" xml:space="preserve">
    <value>--repo-name</value>
  </data>
  <data name="REPO_OWNER_SWITCH" xml:space="preserve">
    <value>--repo-owner</value>
  </data>
  <data name="VERSION_SWITCH_USAGE" xml:space="preserve">
    <value>--version: This switch displays this program's name and version number, along with a copyright message.  If specified, the --version switch must appear by itself.</value>
  </data>
  <data name="UsingRepoName" xml:space="preserve">
    <value>Using repo-name '{0}'.</value>
  </data>
  <data name="UsingRepoOwner" xml:space="preserve">
    <value>Using repo-owner '{0}'.</value>
  </data>
  <data name="UserNotHasPermissionsToFolder" xml:space="preserve">
    <value>ERROR: Current user does not have access permissions to folder '{0}'.</value>
  </data>
  <data name="ZipFolderMustBeDifferentFromAssetFolder" xml:space="preserve">
    <value>ERROR: The output ZIP file for the release assets may not be in the same folder as the assets themselves.</value>
  </data>
  <data name="ZipOutputFolderBlank" xml:space="preserve">
    <value>ERROR: Blank value supplied for ZIP file output folder path. Stopping.</value>
  </data>
  <data name="OutputZipFilePathBlank" xml:space="preserve">
    <value>ERROR: No output path specified for the release asset ZIP file.</value>
  </data>
  <data name="NO_ZIP_SWITCH" xml:space="preserve">
    <value>--no-zip</value>
  </data>
  <data name="NO_ZIP_SWITCH_USAGE" xml:space="preserve">
    <value>--no-zip: Specify this flag on the command line to turn off the automatic ZIPping of release assets.</value>
  </data>
  <data name="AllSwitchesCaseSensitive" xml:space="preserve">
    <value>NOTE: All switches are case-sensitive.  The contents of the switches aren't unless otherwise noted.</value>
  </data>
  <data name="Usage" xml:space="preserve">
    <value>Usage:</value>
  </data>
  <data name="FailedValidateReleaseMetadata" xml:space="preserve">
    <value>Failed to validate release metadata.</value>
  </data>
  <data name="PostingReleaseToWhichRepo" xml:space="preserve">
    <value>Posting release '{0}' to repository '{1}'...</value>
  </data>
  <data name="FailedToPackageReleaseForPosting" xml:space="preserve">
    <value>ERROR: Could not package release for posting.</value>
  </data>
  <data name="GitHubApiV3Accept" xml:space="preserve">
    <value>application/vnd.github.v3.raw</value>
  </data>
  <data name="NoCacheHeader" xml:space="preserve">
    <value>no-cache</value>
  </data>
  <data name="GitHubReleasePosterUserAgent" xml:space="preserve">
    <value>github-release-poster by xyLOGIX</value>
  </data>
  <data name="FailedToFormatReleaseJson" xml:space="preserve">
    <value>ERROR: Failed to format the JSON of the create-release request body.</value>
  </data>
  <data name="CacheControlHeaderName" xml:space="preserve">
    <value>cache-control</value>
  </data>
  <data name="AcceptHeaderName" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="UserAgentHeaderName" xml:space="preserve">
    <value>User-Agent</value>
  </data>
  <data name="AuthorizationHeaderName" xml:space="preserve">
    <value>Authorization</value>
  </data>
  <data name="UndefinedParameterName" xml:space="preserve">
    <value>undefined</value>
  </data>
  <data name="SendingPostRequestToCreateRelease" xml:space="preserve">
    <value>Sending HTTP POST request to create release '{0}'...</value>
  </data>
  <data name="ProcessingReleaseAssets" xml:space="preserve">
    <value>Processing release assets...</value>
  </data>
  <data name="FailedToInitializeLogFile" xml:space="preserve">
    <value>ERROR: Failed to initialize log file.</value>
  </data>
  <data name="FAILED_TO_INITIALIZE_LOGGING" type="System.Int32, mscorlib">
    <value>-103</value>
  </data>
  <data name="ReleaseWillBeMarkedPreRelease" xml:space="preserve">
    <value>This release is being marked as Pre-Release.</value>
  </data>
  <data name="ReleaseWillNotBeMarkedPreRelease" xml:space="preserve">
    <value>This release is NOT being marked as Pre-Release.</value>
  </data>
  <data name="ReleaseWillNotBeMarkedDraft" xml:space="preserve">
    <value>This release is NOT being marked as Draft.</value>
  </data>
  <data name="ReleaseWillBeMarkedDraft" xml:space="preserve">
    <value>This release is being marked as Draft.</value>
  </data>
  <data name="NotZippingReleaseAssets" xml:space="preserve">
    <value>This release's assets will NOT be zipped up prior to upload.</value>
  </data>
  <data name="ZippingReleaseAssets" xml:space="preserve">
    <value>This release's assets will be placed in a ZIP file prior to upload.</value>
  </data>
  <data name="ReleaseZipFileNameContainsInvalidChars" xml:space="preserve">
    <value>ERROR: The name of the destination ZIP file '{0}'  for the release assets contains invalid characters.</value>
  </data>
  <data name="ReleaseAssetDirContainsInvalidChars" xml:space="preserve">
    <value>ERROR: The release asset directory path, '{0}', contains characters that Windows does not allow to be present in a file or directory name.</value>
  </data>
  <data name="NoFilesFoundForZipping" xml:space="preserve">
    <value>ERROR: No files found in the destination that were suitable for ZIPping.</value>
  </data>
  <data name="ZipFileContentType" xml:space="preserve">
    <value>application/zip</value>
  </data>
  <data name="UploadAssetURL" xml:space="preserve">
    <value>{0}?name={1}&amp;label={2}</value>
  </data>
  <data name="ApplicationOctetStreamMimeType" xml:space="preserve">
    <value>application/octet-stream</value>
  </data>
  <data name="ContentTypeHeaderName" xml:space="preserve">
    <value>Content-Type</value>
  </data>
  <data name="AssetsZipName" xml:space="preserve">
    <value>assets.zip</value>
  </data>
  <data name="HypermediaRelationUriTemplateRegex" xml:space="preserve">
    <value>\{\?([^}]+)\}</value>
  </data>
  <data name="GitHubAuthorizationHeaderContent" xml:space="preserve">
    <value>token {0}</value>
  </data>
  <data name="CreateReleaseApiPostURL" xml:space="preserve">
    <value>https://api.github.com/repos/{0}/{1}/releases</value>
  </data>
  <data name="GitHubIndivAssetTestingReleaseName" xml:space="preserve">
    <value>0.7.3</value>
  </data>
  <data name="MasterBranchName" xml:space="preserve">
    <value>master</value>
  </data>
  <data name="GitHubZipAssetsTestingReleaseName" xml:space="preserve">
    <value>0.7.4</value>
  </data>
  <data name="TestingAssetsSourceDirPath" xml:space="preserve">
    <value>C:\Users\ENS Brian Hart\Dropbox\Downloads\emu8086</value>
  </data>
  <data name="TestingUserToken" xml:space="preserve">
    <value>45df609c7cf621c7e75b7a7bf954b0a873934db8</value>
  </data>
  <data name="TestingRepoOwner" xml:space="preserve">
    <value>astrohart</value>
  </data>
  <data name="TestingRepoName" xml:space="preserve">
    <value>NetworkKeeper</value>
  </data>
  <data name="PostReleaseTestNotSucceeded" xml:space="preserve">
    <value>The GitHubReleasePoster.PostNewRelease method did not succeed.</value>
  </data>
  <data name="ERROR_RELEASE_ASSET_DIR_NOT_EXISTS" type="System.Int32, mscorlib">
    <value>-104</value>
  </data>
  <data name="ReleaseAssetDirContainsTooBigFile" xml:space="preserve">
    <value>ERROR: The release asset directory or one of its subfolders contains a file that is 2 GB or greater in size.</value>
  </data>
  <data name="ERROR_RELEASE_ASSET_IS_TOO_BIG" type="System.Int32, mscorlib">
    <value>-105</value>
  </data>
  <data name="TwoGigaBytes" type="System.UInt64, mscorlib">
    <value>2147483648</value>
  </data>
  <data name="ReleaseAssetsAndMetadataValid" xml:space="preserve">
    <value>The release metadata and assets are valid.</value>
  </data>
  <data name="UploadUrlNotObtainable" xml:space="preserve">
    <value>ERROR: Unable to get upload_url value from create release response.</value>
  </data>
  <data name="ERROR_NOT_OBTAINED_RELEASE_UPLOAD_URL" type="System.Int32, mscorlib">
    <value>-106</value>
  </data>
  <data name="ERROR_FAILED_TO_ZIP_ASSETS" type="System.Int32, mscorlib">
    <value>-107</value>
  </data>
  <data name="FailedToZipAssets" xml:space="preserve">
    <value>ERROR: Unable to zip the assets in folder '{0}'.</value>
  </data>
  <data name="ValidatingReleaseMetadata" xml:space="preserve">
    <value>Validating release metadata...</value>
  </data>
  <data name="ZipFileTooBig" xml:space="preserve">
    <value>The size of the '{0}' file is 2 GB or more in size.  GitHub won't accept it.</value>
  </data>
  <data name="ReleasePostedToGitHub" xml:space="preserve">
    <value>Release '{0}' and its assets have been posted to GitHub.</value>
  </data>
  <data name="FailedToUploadAsset" xml:space="preserve">
    <value>Failed to upload asset '{0}'.</value>
  </data>
  <data name="ERROR_ASSET_NOT_ACCEPTED" type="System.Int32, mscorlib">
    <value>-108</value>
  </data>
  <data name="AssetAccepted" xml:space="preserve">
    <value>The asset '{0}' has been accepted by GitHub.</value>
  </data>
</root>